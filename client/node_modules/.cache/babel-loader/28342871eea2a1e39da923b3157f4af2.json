{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/apple/Documents/work/git/nest-react/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject10(){var data=_taggedTemplateLiteral([\"\\n\\tmutation DeleteUser($id: Float!) {\\n\\t\\tdelete(id: $id) {\\n    \\t\\tsuccess\\n  \\t\\t}\\n\\t}\\n\"]);_templateObject10=function _templateObject10(){return data;};return data;}function _templateObject9(){var data=_taggedTemplateLiteral([\"\\n  mutation Register($phone: String!, $password: String!, $firstName: String, $lastName: String, $email: String) {\\n    register(phone: $phone, password: $password, firstName: $firstName, lastName: $lastName, email: $email) {\\n      id, phone, token\\n    }\\n  }\\n\"]);_templateObject9=function _templateObject9(){return data;};return data;}function _templateObject8(){var data=_taggedTemplateLiteral([\"\\n  mutation UpdateUser($id: Float!, $phone: String, $password: String, $firstName: String, $lastName: String, $email: String) {\\n    update(id: $id, phone: $phone, password: $password, firstName: $firstName, lastName: $lastName, email: $email) {\\n      success, \\n      user {\\n      \\tid,phone,firstName,lastName,role\\n      }\\n    }\\n  }\\n\"]);_templateObject8=function _templateObject8(){return data;};return data;}function _templateObject7(){var data=_taggedTemplateLiteral([\"\\n  mutation CreateUser($phone: String!, $password: String!, $firstName: String, $lastName: String, $email: String) {\\n    create(phone: $phone, password: $password, firstName: $firstName, lastName: $lastName, email: $email) {\\n      id, phone, role\\n    }\\n  }\\n\"]);_templateObject7=function _templateObject7(){return data;};return data;}function _templateObject6(){var data=_taggedTemplateLiteral([\"\\n  query GetUser($filter: UserFilterDto) {\\n\\tuser(filter: $filter) {\\n    \\tid,phone,firstName,lastName,email,role\\n  \\t}\\n  }\\n\"]);_templateObject6=function _templateObject6(){return data;};return data;}function _templateObject5(){var data=_taggedTemplateLiteral([\"\\n\\tquery Users($filter: UserFilterDto) {\\n\\t\\tusers(filter: $filter) {\\n    \\t\\tid,phone,firstName,lastName,role\\n  \\t\\t}\\n\\t}\\n\"]);_templateObject5=function _templateObject5(){return data;};return data;}function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n\\tmutation Logout {\\n\\t\\tisLoggedIn @client\\n\\t}\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  query Me {\\n\\tme {\\n    \\tid,phone,firstName,lastName,role\\n  \\t}\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  mutation Login($phone: String!, $password: String!) {\\n    login(phone: $phone, password: $password) {\\n      token\\n    }\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  query IsUserLoggedIn {\\n    isLoggedIn @client\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import{gql}from\"@apollo/client/core\";export var IS_LOGGED_IN=gql(_templateObject());export var LOGIN_USER=gql(_templateObject2());export var USER_ME=gql(_templateObject3());export var LOGOUT_USER=gql(_templateObject4());export var GET_USERS=gql(_templateObject5());export var GET_USER=gql(_templateObject6());export var CREATE_USER=gql(_templateObject7());export var UPDATE_USER=gql(_templateObject8());export var REGISTER_USER=gql(_templateObject9());export var DELETE_USER=gql(_templateObject10());","map":{"version":3,"sources":["/Users/apple/Documents/work/git/nest-react/client/src/process/apollo/GqlData.ts"],"names":["gql","IS_LOGGED_IN","LOGIN_USER","USER_ME","LOGOUT_USER","GET_USERS","GET_USER","CREATE_USER","UPDATE_USER","REGISTER_USER","DELETE_USER"],"mappings":"giGAAA,OAAQA,GAAR,KAAkB,qBAAlB,CAEA,MAAO,IAAMC,CAAAA,YAAY,CAAGD,GAAH,mBAAlB,CAMP,MAAO,IAAME,CAAAA,UAAU,CAAGF,GAAH,oBAAhB,CAQP,MAAO,IAAMG,CAAAA,OAAO,CAAGH,GAAH,oBAAb,CAQP,MAAO,IAAMI,CAAAA,WAAW,CAAGJ,GAAH,oBAAjB,CAMP,MAAO,IAAMK,CAAAA,SAAS,CAAGL,GAAH,oBAAf,CAQP,MAAO,IAAMM,CAAAA,QAAQ,CAAGN,GAAH,oBAAd,CAQP,MAAO,IAAMO,CAAAA,WAAW,CAAGP,GAAH,oBAAjB,CAQP,MAAO,IAAMQ,CAAAA,WAAW,CAAGR,GAAH,oBAAjB,CAWP,MAAO,IAAMS,CAAAA,aAAa,CAAGT,GAAH,oBAAnB,CAQP,MAAO,IAAMU,CAAAA,WAAW,CAAGV,GAAH,qBAAjB","sourcesContent":["import {gql} from \"@apollo/client/core\";\n\nexport const IS_LOGGED_IN = gql`\n  query IsUserLoggedIn {\n    isLoggedIn @client\n  }\n`;\n\nexport const LOGIN_USER = gql`\n  mutation Login($phone: String!, $password: String!) {\n    login(phone: $phone, password: $password) {\n      token\n    }\n  }\n`;\n\nexport const USER_ME = gql`\n  query Me {\n\tme {\n    \tid,phone,firstName,lastName,role\n  \t}\n  }\n`;\n\nexport const LOGOUT_USER = gql`\n\tmutation Logout {\n\t\tisLoggedIn @client\n\t}\n`;\n\nexport const GET_USERS = gql`\n\tquery Users($filter: UserFilterDto) {\n\t\tusers(filter: $filter) {\n    \t\tid,phone,firstName,lastName,role\n  \t\t}\n\t}\n`;\n\nexport const GET_USER = gql`\n  query GetUser($filter: UserFilterDto) {\n\tuser(filter: $filter) {\n    \tid,phone,firstName,lastName,email,role\n  \t}\n  }\n`;\n\nexport const CREATE_USER = gql`\n  mutation CreateUser($phone: String!, $password: String!, $firstName: String, $lastName: String, $email: String) {\n    create(phone: $phone, password: $password, firstName: $firstName, lastName: $lastName, email: $email) {\n      id, phone, role\n    }\n  }\n`;\n\nexport const UPDATE_USER = gql`\n  mutation UpdateUser($id: Float!, $phone: String, $password: String, $firstName: String, $lastName: String, $email: String) {\n    update(id: $id, phone: $phone, password: $password, firstName: $firstName, lastName: $lastName, email: $email) {\n      success, \n      user {\n      \tid,phone,firstName,lastName,role\n      }\n    }\n  }\n`;\n\nexport const REGISTER_USER = gql`\n  mutation Register($phone: String!, $password: String!, $firstName: String, $lastName: String, $email: String) {\n    register(phone: $phone, password: $password, firstName: $firstName, lastName: $lastName, email: $email) {\n      id, phone, token\n    }\n  }\n`;\n\nexport const DELETE_USER = gql`\n\tmutation DeleteUser($id: Float!) {\n\t\tdelete(id: $id) {\n    \t\tsuccess\n  \t\t}\n\t}\n`;\n\n\n"]},"metadata":{},"sourceType":"module"}