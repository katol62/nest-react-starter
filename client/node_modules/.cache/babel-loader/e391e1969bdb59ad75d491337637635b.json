{"ast":null,"code":"import{Subject}from\"rxjs\";var subject=new Subject();export var NotificationService={sendNotification:function sendNotification(notification){subject.next(notification);},clear:function clear(){subject.next();},onNotification:function onNotification(){return subject.asObservable();}};","map":{"version":3,"sources":["/Users/apple/Documents/work/git/nest-react/client/src/process/services/NotificationService.ts"],"names":["Subject","subject","NotificationService","sendNotification","notification","next","clear","onNotification","asObservable"],"mappings":"AAAA,OAASA,OAAT,KAAwB,MAAxB,CAEA,GAAMC,CAAAA,OAAO,CAAG,GAAID,CAAAA,OAAJ,EAAhB,CAUA,MAAO,IAAME,CAAAA,mBAAmB,CAAG,CAElCC,gBAAgB,CAAE,0BAACC,YAAD,CAA4B,CAC7CH,OAAO,CAACI,IAAR,CAAaD,YAAb,EACA,CAJiC,CAMlCE,KAAK,CAAE,gBAAM,CACZL,OAAO,CAACI,IAAR,GACA,CARiC,CAUlCE,cAAc,CAAE,yBAAM,CACrB,MAAON,CAAAA,OAAO,CAACO,YAAR,EAAP,CACA,CAZiC,CAA5B","sourcesContent":["import { Subject } from \"rxjs\";\n\nconst subject = new Subject<IMessage>();\n\nexport type TVariant = 'primary' | 'secondary' | 'success' | 'danger' | 'warning' | 'info' | 'light' | 'dark';\n\nexport interface IMessage {\n\tvariant: TVariant,\n\ttitle: string;\n\tmessage: string\n}\n\nexport const NotificationService = {\n\n\tsendNotification: (notification: IMessage) => {\n\t\tsubject.next(notification);\n\t},\n\n\tclear: () => {\n\t\tsubject.next();\n\t},\n\n\tonNotification: () => {\n\t\treturn subject.asObservable();\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}