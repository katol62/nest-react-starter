{"ast":null,"code":"import PersistentStorage from \"../store/Storage\";\nimport { isLoggedInVar, loggedUserVar, tokenVar } from \"../apollo/GqlClient\";\nimport { Constants } from \"../helpers/Models\";\nimport { isExpired } from \"react-jwt\";\nconst storage = PersistentStorage.instance;\nexport const AuthService = {\n  logOut: () => {\n    storage.clear();\n    loggedUserVar(null);\n    tokenVar(null);\n    isLoggedInVar(false);\n  },\n  setToken: token => {\n    storage.setItem(Constants.TOKEN, token);\n    tokenVar(token);\n  },\n  getToken: () => {\n    return tokenVar();\n  },\n  getInitialToken: () => {\n    return storage.getItem(Constants.TOKEN);\n  },\n  setUser: user => {\n    storage.setItem(Constants.USER, user);\n    loggedUserVar(user);\n  },\n  getUser: () => {\n    return loggedUserVar();\n  },\n  getInitialUser: () => {\n    return storage.getItem(Constants.USER);\n  },\n  setLoggedIn: flag => {\n    isLoggedInVar(flag);\n  },\n  isLoggedIn: () => {\n    return !!(storage.getItem(Constants.TOKEN) && !isExpired(storage.getItem(Constants.TOKEN)));\n  }\n};","map":{"version":3,"sources":["/Users/apple/Documents/work/git/nest-react/client/src/process/services/AuthService.ts"],"names":["PersistentStorage","isLoggedInVar","loggedUserVar","tokenVar","Constants","isExpired","storage","instance","AuthService","logOut","clear","setToken","token","setItem","TOKEN","getToken","getInitialToken","getItem","setUser","user","USER","getUser","getInitialUser","setLoggedIn","flag","isLoggedIn"],"mappings":"AAAA,OAAOA,iBAAP,MAA8B,kBAA9B;AACA,SAAQC,aAAR,EAAuBC,aAAvB,EAAsCC,QAAtC,QAAqD,qBAArD;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,SAAQC,SAAR,QAAwB,WAAxB;AAEA,MAAMC,OAAO,GAAGN,iBAAiB,CAACO,QAAlC;AAEA,OAAO,MAAMC,WAAW,GAAG;AAE1BC,EAAAA,MAAM,EAAE,MAAM;AACbH,IAAAA,OAAO,CAACI,KAAR;AACAR,IAAAA,aAAa,CAAC,IAAD,CAAb;AACAC,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACAF,IAAAA,aAAa,CAAC,KAAD,CAAb;AACA,GAPyB;AAS1BU,EAAAA,QAAQ,EAAGC,KAAD,IAA0B;AACnCN,IAAAA,OAAO,CAACO,OAAR,CAAgBT,SAAS,CAACU,KAA1B,EAAiCF,KAAjC;AACAT,IAAAA,QAAQ,CAACS,KAAD,CAAR;AACA,GAZyB;AAc1BG,EAAAA,QAAQ,EAAE,MAAqB;AAC9B,WAAOZ,QAAQ,EAAf;AACA,GAhByB;AAkB1Ba,EAAAA,eAAe,EAAE,MAAqB;AACrC,WAAOV,OAAO,CAACW,OAAR,CAAgBb,SAAS,CAACU,KAA1B,CAAP;AACA,GApByB;AAsB1BI,EAAAA,OAAO,EAAGC,IAAD,IAAe;AACvBb,IAAAA,OAAO,CAACO,OAAR,CAAgBT,SAAS,CAACgB,IAA1B,EAAgCD,IAAhC;AACAjB,IAAAA,aAAa,CAACiB,IAAD,CAAb;AACA,GAzByB;AA2B1BE,EAAAA,OAAO,EAAE,MAAW;AACnB,WAAOnB,aAAa,EAApB;AACA,GA7ByB;AA+B1BoB,EAAAA,cAAc,EAAE,MAAW;AAC1B,WAAOhB,OAAO,CAACW,OAAR,CAAgBb,SAAS,CAACgB,IAA1B,CAAP;AACA,GAjCyB;AAmC1BG,EAAAA,WAAW,EAAGC,IAAD,IAAmB;AAC/BvB,IAAAA,aAAa,CAACuB,IAAD,CAAb;AACA,GArCyB;AAuC1BC,EAAAA,UAAU,EAAE,MAAe;AAC1B,WAAO,CAAC,EAAEnB,OAAO,CAACW,OAAR,CAAgBb,SAAS,CAACU,KAA1B,KAAoC,CAACT,SAAS,CAACC,OAAO,CAACW,OAAR,CAAgBb,SAAS,CAACU,KAA1B,CAAD,CAAhD,CAAR;AACA;AAzCyB,CAApB","sourcesContent":["import PersistentStorage from \"../store/Storage\";\nimport {isLoggedInVar, loggedUserVar, tokenVar} from \"../apollo/GqlClient\";\nimport {Constants} from \"../helpers/Models\";\nimport {isExpired} from \"react-jwt\";\n\nconst storage = PersistentStorage.instance;\n\nexport const AuthService = {\n\n\tlogOut: () => {\n\t\tstorage.clear();\n\t\tloggedUserVar(null);\n\t\ttokenVar(null);\n\t\tisLoggedInVar(false);\n\t},\n\n\tsetToken: (token: string | null) => {\n\t\tstorage.setItem(Constants.TOKEN, token);\n\t\ttokenVar(token);\n\t},\n\n\tgetToken: (): string | null => {\n\t\treturn tokenVar();\n\t},\n\n\tgetInitialToken: (): string | null => {\n\t\treturn storage.getItem(Constants.TOKEN);\n\t},\n\n\tsetUser: (user: any) => {\n\t\tstorage.setItem(Constants.USER, user);\n\t\tloggedUserVar(user);\n\t},\n\n\tgetUser: (): any => {\n\t\treturn loggedUserVar();\n\t},\n\n\tgetInitialUser: (): any => {\n\t\treturn storage.getItem(Constants.USER);\n\t},\n\n\tsetLoggedIn: (flag: boolean) => {\n\t\tisLoggedInVar(flag);\n\t},\n\n\tisLoggedIn: (): boolean => {\n\t\treturn !!(storage.getItem(Constants.TOKEN) && !isExpired(storage.getItem(Constants.TOKEN)));\n\t}\n\n}\n"]},"metadata":{},"sourceType":"module"}