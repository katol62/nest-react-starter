{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/apple/Documents/work/git/nest-react/client/src/ui/containers/MainView.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { TopBar } from \"../components/Topbar\";\nimport { Route, Switch, useLocation, useRouteMatch } from \"react-router\";\nimport { pages, routes } from \"../../process/helpers/Routes\";\nimport { NotFoundPage } from \"../pages/NotFound\";\nimport { Container } from \"react-bootstrap\";\nimport { SideBar } from \"../components/SideBar\";\nexport const MainView = () => {\n  _s();\n\n  const location = useLocation();\n  const dynamic = useRouteMatch(`/users/:id`);\n  const [expanded, setExpanded] = useState(false);\n  const [route, setRoute] = useState({\n    title: ''\n  });\n  useEffect(() => {\n    const currentPath = dynamic ? dynamic.path : location.pathname;\n    const currentRoute = findRoute(currentPath);\n    setRoute(currentRoute);\n  }, [location, dynamic]);\n\n  const findRoute = path => {\n    return Object.values(routes).find(route => route.path === path);\n  };\n\n  const passExpanded = value => {\n    setExpanded(value);\n  };\n\n  const selectedRoute = route => {\n    setRoute(route);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    fluid: true,\n    children: [/*#__PURE__*/_jsxDEV(SideBar, {\n      notify: passExpanded,\n      select: selectedRoute\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `content ${expanded ? \"expanded\" : \"\"}`,\n      children: [/*#__PURE__*/_jsxDEV(TopBar, {\n        title: route.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [pages.map(({\n          route,\n          exact,\n          component\n        }, index) => /*#__PURE__*/_jsxDEV(Route, {\n          path: route.path,\n          exact: exact,\n          component: component\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }, this)), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"*\",\n          exact: true,\n          component: NotFoundPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 3\n  }, this);\n};\n\n_s(MainView, \"D4JWxxI70/UMfuFCS4qyZLZzbMI=\", false, function () {\n  return [useLocation, useRouteMatch];\n});\n\n_c = MainView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MainView\");","map":{"version":3,"sources":["/Users/apple/Documents/work/git/nest-react/client/src/ui/containers/MainView.tsx"],"names":["React","useEffect","useState","TopBar","Route","Switch","useLocation","useRouteMatch","pages","routes","NotFoundPage","Container","SideBar","MainView","location","dynamic","expanded","setExpanded","route","setRoute","title","currentPath","path","pathname","currentRoute","findRoute","Object","values","find","passExpanded","value","selectedRoute","map","exact","component","index"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,MAAR,QAAqB,sBAArB;AACA,SAAQC,KAAR,EAAeC,MAAf,EAAuBC,WAAvB,EAAoCC,aAApC,QAAwD,cAAxD;AACA,SAAQC,KAAR,EAAeC,MAAf,QAA4B,8BAA5B;AACA,SAAQC,YAAR,QAA2B,mBAA3B;AACA,SAAQC,SAAR,QAAwB,iBAAxB;AACA,SAAQC,OAAR,QAAsB,uBAAtB;AAEA,OAAO,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAE7B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,OAAO,GAAGR,aAAa,CAAE,YAAF,CAA7B;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC;AAACkB,IAAAA,KAAK,EAAE;AAAR,GAAD,CAAlC;AAEAnB,EAAAA,SAAS,CAAE,MAAM;AAChB,UAAMoB,WAAW,GAAGN,OAAO,GAAGA,OAAO,CAACO,IAAX,GAAkBR,QAAQ,CAACS,QAAtD;AACA,UAAMC,YAAY,GAAGC,SAAS,CAACJ,WAAD,CAA9B;AACAF,IAAAA,QAAQ,CAACK,YAAD,CAAR;AACA,GAJQ,EAIN,CAACV,QAAD,EAAWC,OAAX,CAJM,CAAT;;AAMA,QAAMU,SAAS,GAAIH,IAAD,IAAuB;AACxC,WAAOI,MAAM,CAACC,MAAP,CAAclB,MAAd,EAAsBmB,IAAtB,CAA4BV,KAAK,IAAIA,KAAK,CAACI,IAAN,KAAeA,IAApD,CAAP;AACA,GAFD;;AAIA,QAAMO,YAAY,GAAIC,KAAD,IAAoB;AACxCb,IAAAA,WAAW,CAACa,KAAD,CAAX;AACA,GAFD;;AAGA,QAAMC,aAAa,GAAIb,KAAD,IAAgB;AACrCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACA,GAFD;;AAIA,sBACC,QAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAA,4BACC,QAAC,OAAD;AAAS,MAAA,MAAM,EAAEW,YAAjB;AAA+B,MAAA,MAAM,EAAEE;AAAvC;AAAA;AAAA;AAAA;AAAA,YADD,eAEC;AAAK,MAAA,SAAS,EAAG,WAAUf,QAAQ,GAAG,UAAH,GAAgB,EAAG,EAAtD;AAAA,8BACC,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEE,KAAK,CAACE;AAArB;AAAA;AAAA;AAAA;AAAA,cADD,eAEC,QAAC,MAAD;AAAA,mBAEEZ,KAAK,CAACwB,GAAN,CACC,CAAC;AAAEd,UAAAA,KAAF;AAASe,UAAAA,KAAT;AAAgBC,UAAAA;AAAhB,SAAD,EAA8BC,KAA9B,kBACC,QAAC,KAAD;AAAmB,UAAA,IAAI,EAAEjB,KAAK,CAACI,IAA/B;AAAqC,UAAA,KAAK,EAAEW,KAA5C;AAAmD,UAAA,SAAS,EAAEC;AAA9D,WAAYC,KAAZ;AAAA;AAAA;AAAA;AAAA,gBAFF,CAFF,eAOC,QAAC,KAAD;AAAO,UAAA,IAAI,EAAC,GAAZ;AAAgB,UAAA,KAAK,EAAE,IAAvB;AAA6B,UAAA,SAAS,EAAEzB;AAAxC;AAAA;AAAA;AAAA;AAAA,gBAPD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFD;AAAA;AAAA;AAAA;AAAA;AAAA,YAFD;AAAA;AAAA;AAAA;AAAA;AAAA,UADD;AAkBA,CA1CM;;GAAMG,Q;UAEKP,W,EACDC,a;;;KAHJM,Q","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport {TopBar} from \"../components/Topbar\";\nimport {Route, Switch, useLocation, useRouteMatch} from \"react-router\";\nimport {pages, routes} from \"../../process/helpers/Routes\";\nimport {NotFoundPage} from \"../pages/NotFound\";\nimport {Container} from \"react-bootstrap\";\nimport {SideBar} from \"../components/SideBar\";\n\nexport const MainView = () => {\n\n\tconst location = useLocation();\n\tconst dynamic = useRouteMatch(`/users/:id`)\n\tconst [expanded, setExpanded] = useState(false);\n\tconst [route, setRoute] = useState({title: ''})\n\n\tuseEffect( () => {\n\t\tconst currentPath = dynamic ? dynamic.path : location.pathname;\n\t\tconst currentRoute = findRoute(currentPath);\n\t\tsetRoute(currentRoute);\n\t}, [location, dynamic]);\n\n\tconst findRoute = (path: string): any => {\n\t\treturn Object.values(routes).find( route => route.path === path);\n\t}\n\n\tconst passExpanded = (value: boolean) => {\n\t\tsetExpanded(value);\n\t}\n\tconst selectedRoute = (route: any) => {\n\t\tsetRoute(route);\n\t}\n\n\treturn (\n\t\t<Container fluid>\n\t\t\t<SideBar notify={passExpanded} select={selectedRoute} />\n\t\t\t<div className={`content ${expanded ? \"expanded\" : \"\"}`}>\n\t\t\t\t<TopBar title={route.title} />\n\t\t\t\t<Switch>\n\t\t\t\t\t{\n\t\t\t\t\t\tpages.map(\n\t\t\t\t\t\t\t({ route, exact, component }, index) =>\n\t\t\t\t\t\t\t\t<Route key={index} path={route.path} exact={exact} component={component} />\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t\t<Route path='*' exact={true} component={NotFoundPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</Container>\n\n\t)\n}\n"]},"metadata":{},"sourceType":"module"}